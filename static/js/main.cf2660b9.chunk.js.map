{"version":3,"sources":["Images/cover.jpeg","Pages/Home/FrontPage.js","Components/VideoHolder.js","Components/StripItems.js","Data/mock.js","Pages/Home/Sugestions.js","Components/Header.js","Pages/Home/Home.js","Pages/Login/Login.js","Pages/Pdc/Pdc.js","serviceWorker.js","index.js"],"names":["module","exports","FrontPage","className","VideoHolder","props","itemName","item","name","image","link","to","src","StripItems","content","items","map","key","sugestions","cover","sugestionLogged","Sugestions","isLogged","Header","Home","localStorage","getItem","console","log","setItem","Login","isLogin","Pdc","Boolean","window","location","hostname","match","ReactDOM","render","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cf2660b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cover.adb20158.jpeg\";","import React, { Fragment } from \"react\";\nimport \"./Home.css\";\n\nconst FrontPage = () => {\n  return (\n    <Fragment>\n      <div className=\"c_initialPage__Back\">\n        <div className=\"c_initialPage__Title\">\n          <div className=\"c_initialPage__TitleName\">IndSpace</div>\n          <div className=\"c_initialPage__TitleDescription\">\n            O seu lugar para conte√∫do independente\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default FrontPage;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./custom.css\";\n\nconst VideoHolder = (props) => {\n  const itemName = props.item.name;\n  const image = props.item.image;\n  const link = props.item.link;\n\n  return (\n    <Fragment>\n      <Link to={link}>\n        <img src={image} />\n        <div>{itemName}</div>\n      </Link>\n    </Fragment>\n  );\n};\n\nexport default VideoHolder;\n","import React from \"react\";\nimport \"./custom.css\";\nimport \"../global.css\";\nimport VideoHolder from \"./VideoHolder\";\n\nconst StripItems = (props) => {\n  const content = props.content;\n  const name = content.name;\n  const items = content.items;\n\n  return (\n    <div className=\"c-stripItems o-wrapper o-layout--sm _pvsm\">\n      <h1 className=\"c-stripItems__Name\">{name}</h1>\n      <div className=\"o-layout--sm@tabletV _df\">\n        {items.map((item, key) => (\n          <div key={key} className=\"o-layout__item _4/12\">\n            <VideoHolder item={item} />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default StripItems;\n","import cover from \"../Images/cover.jpeg\";\n\nexport const sugestions = [\n  {\n    name: \"Pra talvez rir\",\n    items: [\n      {\n        name: \"As longas tran√ßas de um careca\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A volta dos que nunca foram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A ressurei√ß√£o dos que n√£o morreram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A casa do n√¥made\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n    ],\n  },\n  {\n    name: \"N√£o posso piscar\",\n    items: [\n      {\n        name: \"As longas tran√ßas de um careca\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A volta dos que nunca foram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A ressurei√ß√£o dos que n√£o morreram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A casa do n√¥made\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n    ],\n  },\n  {\n    name: \"√â desenho ou anime? ü§î\",\n    items: [\n      {\n        name: \"As longas tran√ßas de um careca\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A volta dos que nunca foram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A ressurei√ß√£o dos que n√£o morreram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A casa do n√¥made\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n    ],\n  },\n  {\n    name: \"Foi um BR que fez\",\n    items: [\n      {\n        name: \"As longas tran√ßas de um careca\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A volta dos que nunca foram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A ressurei√ß√£o dos que n√£o morreram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A casa do n√¥made\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n    ],\n  },\n];\n\nexport const sugestionLogged = [\n  {\n    name: \"Eu tenho que acabar esses\",\n    items: [\n      {\n        name: \"As longas tran√ßas de um careca\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A volta dos que nunca foram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A ressurei√ß√£o dos que n√£o morreram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A casa do n√¥made\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n    ],\n  },\n  {\n    name: \"Mas tamb√©m quero ver esses\",\n    items: [\n      {\n        name: \"As longas tran√ßas de um careca\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A volta dos que nunca foram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A ressurei√ß√£o dos que n√£o morreram\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n      {\n        name: \"A casa do n√¥made\",\n        image: cover,\n        link: \"/IndSpace\",\n      },\n    ],\n  },\n];\n","import React from \"react\";\nimport StripItems from \"../../Components/StripItems\";\nimport \"./Home.css\";\nimport { sugestions, sugestionLogged } from \"../../Data/mock.js\";\n\nconst Sugestions = (props) => {\n  return (\n    <div>\n      {props.isLogged === \"true\" &&\n        sugestionLogged.map((item, key) => (\n          <StripItems content={item} key={key} />\n        ))}\n\n      {sugestions.map((item, key) => (\n        <StripItems key={key} content={item} />\n      ))}\n    </div>\n  );\n};\n\nexport default Sugestions;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./custom.css\";\n\nconst Header = (props) => {\n  return (\n    <Fragment>\n      <div className=\"c_Header\">\n        <Link to=\"/IndSpace\">\n          <div className=\"_fz30\">IndSpace</div>\n        </Link>\n\n        {!props.isLogged ||\n          (props.isLogged === \"false\" && (\n            <Link to=\"/IndSpace/login\">\n              <div>Login</div>\n            </Link>\n          ))}\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from \"react\";\nimport \"./Home.css\";\nimport FrontPage from \"./FrontPage\";\nimport Sugestions from \"./Sugestions\";\nimport Header from \"../../Components/Header\";\n\nconst Home = () => {\n  var isLogged = localStorage.getItem(\"isLogged\");\n  console.log(isLogged);\n  if (isLogged === null || isLogged === \"false\") {\n    localStorage.setItem(\"isLogged\", \"false\");\n    isLogged = \"false\";\n  }\n\n  console.log(isLogged);\n\n  return (\n    <Fragment>\n      <Header isLogged={isLogged} />\n      <FrontPage />\n      <Sugestions isLogged={isLogged} />\n    </Fragment>\n  );\n};\n\nexport default Home;\n","import React, { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../../Components/Header\";\n\nconst Login = () => {\n  var isLogged = localStorage.getItem(\"isLogged\");\n\n  if (!isLogged) {\n    localStorage.setItem(\"isLogged\", \"false\");\n    isLogged = false;\n  }\n\n  return (\n    <Fragment>\n      <Header isLogged={isLogged} isLogin={true} />\n      <h1>Aqui √© o Login</h1>\n      <div>\n        <Link to=\"/IndSpace/pdc\">Aqui √© o perfil do produtor de conte√∫do</Link>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Login;\n","import React, { Fragment } from \"react\";\nimport Header from \"../../Components/Header\";\n\nconst Pdc = () => {\n  var isLogged = localStorage.getItem(\"isLogged\");\n\n  if (!isLogged) {\n    localStorage.setItem(\"isLogged\", \"false\");\n    isLogged = false;\n  }\n\n  return (\n    <Fragment>\n      <Header isLogged={isLogged} />\n      <h1>Aqui √© o perfil do produtor de conte√∫do</h1>\n    </Fragment>\n  );\n};\n\nexport default Pdc;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Home from \"./Pages/Home/Home\";\nimport Login from \"./Pages/Login/Login\";\nimport Pdc from \"./Pages/Pdc/Pdc\";\nimport \"./global.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/IndSpace\" exact={true} component={Home} />\n      <Route path=\"/IndSpace/login\" exact={true} component={Login} />\n      <Route path=\"/IndSpace/pdc\" exact={true} component={Pdc} />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}